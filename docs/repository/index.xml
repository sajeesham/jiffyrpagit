<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Repositories on Welcome to the Jiffy-RPA Help Center</title>
    <link>https://sajeesham.github.io/jiffyrpagit/repository/</link>
    <description>Recent content in Repositories on Welcome to the Jiffy-RPA Help Center</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Nov 2016 14:13:40 +0530</lastBuildDate>
    
	<atom:link href="https://sajeesham.github.io/jiffyrpagit/repository/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1. Overview</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/1.-overview/</link>
      <pubDate>Mon, 07 Nov 2016 14:13:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/1.-overview/</guid>
      <description>Repository refers to a central place where tasks and all other components which are reusable (eg. Input data files, templates, components etc) are stored and maintained. Users with relevent access can upload/download items into repository.
The following are the sub folders in repository
 Test Case Repository XML templates JSON templates CSV data JSON data Web Services UI Controls Expressions Labels Macros  </description>
    </item>
    
    <item>
      <title>2. Task Repository</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/2.-task-repository/</link>
      <pubDate>Mon, 07 Nov 2016 14:12:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/2.-task-repository/</guid>
      <description>The primary objective of a task repository is to maintain the baselined versions of tasks that can be reused in future. The Repository provides a folder structure where you can logically group the tasks under various functional heads.
Once the task designed and verified, if it needs to be baselined to use in future it can be checked into the test case repository. The versioning feature of Jiffy allows to view the previous version of the task in the repository.</description>
    </item>
    
    <item>
      <title>3. XML Templates</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/3.-xml-templates/</link>
      <pubDate>Mon, 07 Nov 2016 14:10:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/3.-xml-templates/</guid>
      <description>The template repository is used to store all the templates that will be used as input/output templates for Jiffy nodes like API&amp;rsquo;s, Services etc in task design. As a one time activity, users have to upload all the templates that are required into this repository. The following are the different functionalities available
Add new templates Add new template to repository. Jiffy provides an option to mention the mandatory fields during upload.</description>
    </item>
    
    <item>
      <title>4. JSON Templates</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/4.-json-templates/</link>
      <pubDate>Mon, 07 Nov 2016 14:09:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/4.-json-templates/</guid>
      <description>The functionalities of JSON templates are same as XML templates. Please refer to Repositories &amp;gt; XML template for the details.</description>
    </item>
    
    <item>
      <title>5. CSV Data</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/5.-csv-data/</link>
      <pubDate>Mon, 07 Nov 2016 14:08:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/5.-csv-data/</guid>
      <description>These data repositories are used to upload the input data files that will be used as input data nodes in task design. The files loaded here will be available as dropdown option for user to choose in task design.
The following are the different functionalities available
Add new data file Add new data file to repository.
View data Data can be viewed as tree data or as Raw Data</description>
    </item>
    
    <item>
      <title>6. XML Data</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/6.-xml-data/</link>
      <pubDate>Mon, 07 Nov 2016 14:07:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/6.-xml-data/</guid>
      <description>The functionalities of XML data are same as CSV data. Please refer to Repositories &amp;gt; XML data for the details.</description>
    </item>
    
    <item>
      <title>7. JSON Data</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/7.-json-data/</link>
      <pubDate>Mon, 07 Nov 2016 14:06:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/7.-json-data/</guid>
      <description>The functionalities of JSON data are same as CSV data. Please refer to Repositories &amp;gt; CSV data for the details.</description>
    </item>
    
    <item>
      <title>8. Web Services</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/8.-web-services/</link>
      <pubDate>Mon, 07 Nov 2016 14:05:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/8.-web-services/</guid>
      <description>Jiffy web service is framework for mocking web service responses for any external web service calls in the system. This framework provides a simple means to process the input and mock the response of external web services. In case the actual web service is not available or not integrated in the environment then users can create a webservice in Jiffy in order to proceed with task execution.
The following are the functionalities available in Repository &amp;gt; Web services</description>
    </item>
    
    <item>
      <title>9. UI Controls</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/9.-ui-controls/</link>
      <pubDate>Mon, 07 Nov 2016 14:04:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/9.-ui-controls/</guid>
      <description>UI Controls are used to save all the UI Modules and Controls which are created during UI familiarization using Jiffy UI Learn App. During familiarization when the familiarized controls are saved, those are automatically saved under this folder. If required, users can manually add new UI controls here. Also users are allowed to edit the existing UI controls for any new changes in UI pages instead of re familiarizing the page again.</description>
    </item>
    
    <item>
      <title>10. Expressions</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/10.-expressions/</link>
      <pubDate>Mon, 07 Nov 2016 14:03:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/10.-expressions/</guid>
      <description>This is used to save custom expressions which can be used in scripting of all UI nodes. These expressions has to be written in Python language and can be reused in UI nodes of tasks across Processes.
Users are allowed to create/edit/view/delete custom expressions in Repository &amp;gt; Expressions
Note: Jiffy also allows users to write expressions in mappings and places where conditions are written like validator node, IF node, IF/While conditions etc.</description>
    </item>
    
    <item>
      <title>11. Labels</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/11.-labels/</link>
      <pubDate>Mon, 07 Nov 2016 14:02:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/11.-labels/</guid>
      <description>Labels are used for the logical grouping of tasks. Tasks that are spread across Function, Processes and Environments can be grouped under one label. During execution, users can select all the tasks labelled with same name under an environment for execution.
The following are the different functionalities available in Repositories &amp;gt; Labels
Add Label Navigate to Repository &amp;gt; Labels, Click on Add Labels.
View all tasks linked to the same label Click on label ID, all the tasks would be displayed</description>
    </item>
    
    <item>
      <title>12. Excel Macros</title>
      <link>https://sajeesham.github.io/jiffyrpagit/repository/12.-excel-macros/</link>
      <pubDate>Mon, 07 Nov 2016 14:01:40 +0530</pubDate>
      
      <guid>https://sajeesham.github.io/jiffyrpagit/repository/12.-excel-macros/</guid>
      <description>Excel macros can be created and saved in repository and can be used while doing the scripting for Excel node in task design.
The following are the functionalities available
 Create new macros Edit existing macros Archive macros  Once the macros are created in repository, this can be reused in Excel node scripting in task design.</description>
    </item>
    
  </channel>
</rss>